<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-03-06T10:22:00+00:00</updated><id>/feed.xml</id><title type="html">Planning Twitter Bot</title><subtitle>The Planning Twitter Bot english project.  </subtitle><entry><title type="html">Parsing iCalendar</title><link href="/golang/development/2018/12/19/parsing.html" rel="alternate" type="text/html" title="Parsing iCalendar" /><published>2018-12-19T11:30:00+00:00</published><updated>2018-12-19T11:30:00+00:00</updated><id>/golang/development/2018/12/19/parsing</id><content type="html" xml:base="/golang/development/2018/12/19/parsing.html">&lt;p&gt;Today I started the development of the step that allows us to transform the &lt;strong&gt;iCalendar&lt;/strong&gt; file into a tweet which will be send&lt;/p&gt;

&lt;p&gt;I have started to read the &lt;strong&gt;iCalendar&lt;/strong&gt; file and puted it as a &lt;strong&gt;string&lt;/strong&gt;, that I have parsed to put all the data into a &lt;strong&gt;map&lt;/strong&gt;.
After, I will choose the data we need to do tweets and I will put them in a &lt;strong&gt;string&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For now, I have done the parsing of the &lt;strong&gt;iCalendar&lt;/strong&gt; file, and I will work on the data.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Made by Tony&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Today I started the development of the step that allows us to transform the iCalendar file into a tweet which will be send</summary></entry><entry><title type="html">19/12/2018 - News</title><link href="/development/news/2018/12/19/News.html" rel="alternate" type="text/html" title="19/12/2018 - News" /><published>2018-12-19T10:23:58+00:00</published><updated>2018-12-19T10:23:58+00:00</updated><id>/development/news/2018/12/19/News</id><content type="html" xml:base="/development/news/2018/12/19/News.html">&lt;p&gt;Today we had to develop a part of the code that is &lt;strong&gt;sending tweets automatically&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After some tests the bot can now tweet &lt;strong&gt;every minute&lt;/strong&gt; and remove its proper tweets.&lt;/p&gt;

&lt;p&gt;This code example will be useful in the future to &lt;strong&gt;tweet&lt;/strong&gt; the planning &lt;strong&gt;everyday&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No problems&lt;/strong&gt; were encountered during these hours of developing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Made by Sandro&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Today we had to develop a part of the code that is sending tweets automatically.</summary></entry><entry><title type="html">AWS Lambda</title><link href="/aws/lambda/cloud/computing/2018/11/21/Lambda.html" rel="alternate" type="text/html" title="AWS Lambda" /><published>2018-11-21T10:23:58+00:00</published><updated>2018-11-21T10:23:58+00:00</updated><id>/aws/lambda/cloud/computing/2018/11/21/Lambda</id><content type="html" xml:base="/aws/lambda/cloud/computing/2018/11/21/Lambda.html">&lt;h1 id=&quot;aws-lambda&quot;&gt;AWS Lambda&lt;/h1&gt;

&lt;p&gt;As a part of our project, we decided to deploy our Golang code to the cloud computing platform &lt;strong&gt;Amazon Web Services (AWS)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We made this choice because AWS is relatively easy to use, and is basically free for students.&lt;/p&gt;

&lt;h2 id=&quot;what-is-aws&quot;&gt;What is AWS&lt;/h2&gt;

&lt;p&gt;Amazon Web Services (or simply AWS) is a platform of cloud computing created by Amazon. It provide a great number of services, such as compute power (virtual machines), file storage, domain hosting, machine learning, web application hosting, etc … The basic premise of AWS is that you pay for what you use and only what you use. It is available in most regions of the world.&lt;/p&gt;

&lt;h2 id=&quot;what-is-aws-lambda&quot;&gt;What is AWS Lambda&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt; is a service provided by AWS. It is &lt;em&gt;FaaS&lt;/em&gt;, Function as a Service. The core concept is that you upload your code to the service, and you let AWS manage the servers required to run the code.&lt;/p&gt;

&lt;p&gt;This is called &lt;strong&gt;serverless architecture&lt;/strong&gt;, because the user doesn’t have to manage the servers that run his code.&lt;/p&gt;

&lt;p&gt;In AWS Lambda, you create Lambda Functions, which are pieces of code that react to events.&lt;/p&gt;

&lt;p&gt;An event is generally related to the cloud platform the function is hosted on: for instance, you can trigger a Lambda function any time a file is uploaded to a storage service&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The uploaded file is &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the above code, the Lambda is triggered when a file is uploaded to S3 (AWS Simple Storage Service), and prints the name of the file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Made by Thierry&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">AWS Lambda</summary></entry><entry><title type="html">English project planning</title><link href="/2018/11/07/Planning.html" rel="alternate" type="text/html" title="English project planning" /><published>2018-11-07T10:50:50+00:00</published><updated>2018-11-07T10:50:50+00:00</updated><id>/2018/11/07/Planning</id><content type="html" xml:base="/2018/11/07/Planning.html">&lt;h3 id=&quot;planning-&quot;&gt;&lt;strong&gt;Planning :&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Lesson 1 :&lt;/strong&gt; Learning GO (2 hours)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lesson 2 :&lt;/strong&gt; Serverless computing with AWS (2 hours)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lesson 3 :&lt;/strong&gt; Setting up environnement (2 hours)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lessons 4-7 :&lt;/strong&gt; Work, programming the project (8 hours)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lesson 8 :&lt;/strong&gt; Prepar the presentation (2 hours)&lt;/p&gt;

&lt;p&gt;Total : 16 hours&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Made by Elliot&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Planning :</summary></entry><entry><title type="html">Golang</title><link href="/golang/discovery/2018/11/07/golang.html" rel="alternate" type="text/html" title="Golang" /><published>2018-11-07T10:23:58+00:00</published><updated>2018-11-07T10:23:58+00:00</updated><id>/golang/discovery/2018/11/07/golang</id><content type="html" xml:base="/golang/discovery/2018/11/07/golang.html">&lt;p&gt;&lt;strong&gt;Golang&lt;/strong&gt; is a programming language created by &lt;strong&gt;Google&lt;/strong&gt; used in a lot of projects, like &lt;strong&gt;Docker, Kubernetes, Uber, …&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This language seems to be a really complete programming language that allows us to do a lot of things, to make syntax clear and concise, and make complex calculations.&lt;/p&gt;

&lt;p&gt;Also, &lt;strong&gt;Golang&lt;/strong&gt; is usable for programming the &lt;strong&gt;Twitter Bot&lt;/strong&gt; we want to do thanks to a lot of libraries.&lt;/p&gt;

&lt;h3 id=&quot;exemples-&quot;&gt;Exemples :&lt;/h3&gt;
&lt;p&gt;Here there are two way to initialize variables, they are equivalent but the second is shorter.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the way to initialize functions in &lt;strong&gt;Golang&lt;/strong&gt;.
The first key word is &lt;em&gt;func&lt;/em&gt; followed by the name of the function, here &lt;em&gt;test&lt;/em&gt;.
The first brackets are the passing arguments and their type, and the second are the type of the return arguments.
With &lt;strong&gt;Golang&lt;/strong&gt;, you can return more than one arguments.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Made by Tony&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Golang is a programming language created by Google used in a lot of projects, like Docker, Kubernetes, Uber, …</summary></entry><entry><title type="html">Project</title><link href="/project/discovery/2018/11/07/project.html" rel="alternate" type="text/html" title="Project" /><published>2018-11-07T10:20:58+00:00</published><updated>2018-11-07T10:20:58+00:00</updated><id>/project/discovery/2018/11/07/project</id><content type="html" xml:base="/project/discovery/2018/11/07/project.html">&lt;p&gt;We are going to program a &lt;strong&gt;Twitter bot&lt;/strong&gt; named &lt;strong&gt;Planning Twitter Bot&lt;/strong&gt; that is sending :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The next lesson &lt;strong&gt;every hour&lt;/strong&gt;, 15 minutes before&lt;/li&gt;
  &lt;li&gt;A daily planning &lt;strong&gt;every evening&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;A weekly planning &lt;strong&gt;every sunday&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will use the &lt;a href=&quot;https://english-project.tgarcin.fr/golang/discovery/2018/11/07/golang.html&quot;&gt;Golang&lt;/a&gt; to program it, and it will be host on &lt;strong&gt;AWS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If this project is too easy to realize, a good next step is to add a graphical planning generation (an image) that is send every week.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Made by Sandro&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">We are going to program a Twitter bot named Planning Twitter Bot that is sending : The next lesson every hour, 15 minutes before A daily planning every evening A weekly planning every sunday</summary></entry></feed>