<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-11-07T13:17:29+00:00</updated><id>/feed.xml</id><title type="html">Planning Twitter Bot</title><subtitle>The Planning Twitter Bot english project.  </subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2018/11/07/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-11-07T10:23:58+00:00</published><updated>2018-11-07T10:23:58+00:00</updated><id>/jekyll/update/2018/11/07/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2018/11/07/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Golang</title><link href="/2018/11/07/golang.html" rel="alternate" type="text/html" title="Golang" /><published>2018-11-07T00:00:00+00:00</published><updated>2018-11-07T00:00:00+00:00</updated><id>/2018/11/07/golang</id><content type="html" xml:base="/2018/11/07/golang.html">&lt;h1 id=&quot;golang&quot;&gt;Golang&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Golang&lt;/strong&gt; is a programming language created by &lt;strong&gt;Google&lt;/strong&gt; used in a lot of projects, like &lt;strong&gt;Docker, Kubernetes, Uber, …&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This language seems to be a really complete programming language and permit to do a lot of things, to make syntax clear and concise, and make complex calculations.&lt;/p&gt;

&lt;p&gt;Also, &lt;strong&gt;Golang&lt;/strong&gt; is usable for programming the &lt;strong&gt;Twitter Bot&lt;/strong&gt; we want to do thanks to a lot of libraries.&lt;/p&gt;

&lt;h3 id=&quot;exemples-&quot;&gt;Exemples :&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var i int = 0
j := 0 Here there are two way to initialize variables, they are equivalents but the second is shorter.


func test(x, y string) (string, string) {
	return y, x
} This is the way to initialize functions in **Golang**. The first key word is *func* followed by the name of the function, here *test*. The first brackets are the passing arguments and their type, and the seconds are the type of the return arguments. With **Golang**, you can return more than one arguments.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Golang Golang is a programming language created by Google used in a lot of projects, like Docker, Kubernetes, Uber, …</summary></entry></feed>